#!/usr/sbin/nft -f

# Bridges
# -------
#
#  nft-community - regular L2 bridge with switching between ports
#  nft-isolated  - bridge with disabled switching between ports
#
# For isolated bridges specific configuration applied on Docker
# host system. See corresponding to nft-isolated bridge entries
# in /etc/sysctl.d/local.conf. Bridge isolation is done using
# nftables bridge family.
#
# Since Docker uses iptables-legacy to configure network for containers
# there must be exception for nft-* bridges in DOCKER-USER chain. See
# /etc/iptables/rules.v? for details.
#
# From uplink interface (en0) there must be Proxy ARP enabled to make
# rest of the world reach networks configured for nft-* bridges.
#
# Network layout for Docker containers
# ------------------------------------
#
#  192.168.0.128/25
#    192.168.0.128/26 - nft-community
#      192.168.0.128/27
#        192.168.0.129 - Docker host (gateway)
#
#      192.168.0.160/27
#
#    192.168.0.192/26 - nft-isolated
#      192.168.0.192/27
#        192.168.0.193 - Docker host (gateway)
#        192.168.0.209 - mariadb
#        192.168.0.210 - phpmyadmin
#        192.168.0.221 - guac-guacd
#        192.168.0.222 - guac-guacamole
#
#      192.168.0.224/27
#        192.168.0.242 - nginx
#        192.168.0.243 - <free>
#        192.168.0.244 - sftp

flush ruleset

# Divert mark
define divert_mark = 0x0bffbfff

table bridge filter {
	#flags dormant

	chain forward {
		type filter hook forward priority filter; policy accept;
		ibrname "docker0" drop
		ibrname "nft-isol-*" drop
	}
}

table inet raw {
	#flags dormant

	chain prerouting {
		type filter hook prerouting priority raw; policy accept;

		# Do not track from loopback interface
		iif "lo" notrack accept

		# Do not track to local port/protos
		icmp type echo-request notrack accept
		icmpv6 type echo-request notrack accept
	}

	chain output {
		type filter hook output priority raw; policy accept;

		# Do not track to loopback interface
		oif "lo" notrack accept

		# Do not track from local port/protos
		icmp type echo-reply notrack accept
		icmpv6 type echo-reply notrack accept
	}
}

table inet nat {
	#flags dormant

	set localnets {
		type ipv4_addr
		flags constant,interval
		elements = {
			127.0.0.0/8,     # lo  (not used, handled by fib lookup)
			192.168.0.0/16,  # nft-*
			198.51.100.0/24, # rpf
			203.0.113.0/24   # rpf
		}
	}

	chain dns-divert {
		# Redirect DNS requests to systemd-resolved(8) to make
		# name resolution in containers connected to non-host
		# network (i.e. not with docker-run(1) --network=host
		# option) work.
		#
		# For non-host networks (e.g. "default") docker adds
		# public DNS nameserver(s) (e.g. 8.8.8.8 and/or 8.8.4.4)
		# to /etc/resolve.conf. Thus such nameserver(s) should
		# be enabled in host firewall forward chain and on
		# provider network where host connected.
		#
		# Later might not be true since provider may restrict
		# access to it's own DNS servers only forcing client(s)
		# to configure them by either via DHCP or manually. Here
		# is why systemd-resolved(8) should be used for name
		# resolution in containers: it uses provider DNS servers
		# on provider network.

		meta l4proto { tcp, udp } th dport 53 \
			ct mark set $divert_mark redirect to :9953
	}

	chain prerouting {
		type nat hook prerouting priority dstnat; policy accept;

		## Divert DNS requests to :PORT on input interface IP
		iifname "docker0" \
			jump dns-divert

		## No DNAT for non-local addresses
		fib daddr type != local accept

		## DNAT to internal addresses
		ct original ip daddr @localnets accept

		## DNAT to external addresses
		iifname "en0" \
		dnat ip to ip daddr . tcp dport map {      \
			# prd
			10.1.1.241 . 80   : 192.168.1.242, \
			10.1.1.241 . 443  : 192.168.1.242, \
			# stg
			10.1.1.242 . 80   : 192.168.2.242, \
			10.1.1.242 . 443  : 192.168.2.242, \
			# dev
			10.1.1.243 . 80   : 192.168.3.242, \
			10.1.1.243 . 443  : 192.168.3.242  \
		}
	}

	chain snat-2-ext {
		snat ip to ip saddr & 255.255.255.0 map { \
			# prd
			192.168.1.0 : 10.1.1.241,         \
			# stg
			192.168.2.0 : 10.1.1.242,         \
			# dev
			192.168.3.0 : 10.1.1.243,         \
		}
		masquerade
	}
	chain postrouting {
		type nat hook postrouting priority srcnat; policy accept;

		oifname { "en0", "macvlan0" } \
			jump snat-2-ext
	}
}

table inet filter {
	#flags dormant

	chain input {
		type filter hook input priority filter; policy accept;
		iif "lo" accept

		## conntrack
		ct state vmap {
			established : accept,
			related     : accept,
			invalid     : drop
		} accept

		## icmpv4
		icmp type echo-request accept

		## icmpv6
		icmpv6 type {
			nd-neighbor-solicit,
			nd-neighbor-advert,
			echo-request
		} accept

		ct mark $divert_mark \
			accept

		## sshd
		ip daddr 10.1.1.187 \
		ip saddr & 255.255.0.255 == 192.168.0.221 \
			tcp dport 22 accept

		ip daddr 10.1.1.187 \
		ip saddr {
			10.1.1.0/24,     # shared LAN
			172.22.71.0/24,  # VPN
			203.0.113.9,     # mtr.example.com
		} accept

		## reject
		reject with icmpx type admin-prohibited
	}

	## new

	# 192.168.0.210
	chain fwd-4-phpmyadmin {
		# to mariadb.local
		ip daddr & 255.255.0.255 == 192.168.0.209 \
			tcp dport 3306 accept
	}

	# 192.168.0.221
	chain fwd-4-guacd {
		ip daddr . tcp dport {       \
			# prd
			10.1.1.215  . 22,    \
			10.1.1.216  . 3389,  \
			10.1.1.217  . 3389,  \
			# stg
			10.1.1.211  . 22,    \
			10.1.1.201  . 3389,  \
			10.1.1.214  . 3389,  \
			# dev
			10.1.1.212  . 22,    \
			10.1.1.210  . 3389,  \
		} accept
	}

	# 192.168.0.222
	chain fwd-4-guacamole {
		ip daddr & 255.255.0.255 . tcp dport { \
			# to mariadb.local
			192.168.0.209 . 3306,          \
			# to guac-guacd.local
			192.168.0.221 . 4822           \
		} accept
	}

	# 192.168.0.242
	chain fwd-4-nginx {
		ip daddr & 255.255.0.255 . tcp dport { \
			# to phpmyadmin.local
			192.168.0.210 . 9000,          \
			# to guac-guacamole.local
			192.168.0.222 . 8080           \
		} accept

		# to cm.local
		tcp dport 80 \
		ip saddr . ip daddr {               \
			# prd
			192.168.1.242 . 10.1.1.216, \
			# stg
			192.168.2.242 . 10.1.1.201, \
			# dev
			192.168.3.242 . 10.1.1.210  \
		} accept

		# to Let'sEncrypt OSCP (r3.o.lencr.org) for stapling
		tcp dport 80 \
		ip daddr != 10.1.1.0/24 \
			accept

		# to acme-le.gw.api.example.com
		ip daddr 203.0.113.131 \
			tcp dport 443 accept
	}
	chain fwd-2-nginx {
		ip saddr & 255.255.0.0 != 192.168.0.0 \
			tcp dport { 80, 443 } accept
	}

	# 192.168.0.244
	chain fwd-2-sftp {
		ip saddr & 255.255.0.0 != 192.168.0.0 \
			tcp dport 22 accept
	}

	chain fwd-4-restricted {
		# not to internet
		oifname != "en0" return

		# permit ping
		icmp type echo-request accept

		# restrict access to specified services only
		ip daddr . meta l4proto . th dport vmap { \
			# http/https
			0.0.0.0/0 . tcp . 80  : accept,   \
			0.0.0.0/0 . tcp . 443 : accept,   \
		}
	}

	chain fwd-ct-new {
		iifname "docker0" \
			goto fwd-4-restricted

		iifname != "nft-*" iifname != "en0" iifname != "macvlan0" return
		oifname != "nft-*" oifname != "en0" oifname != "macvlan0" return

		ip saddr & 255.255.0.255 vmap {
			192.168.0.210 : goto fwd-4-phpmyadmin,
			192.168.0.221 : goto fwd-4-guacd,
			192.168.0.222 : goto fwd-4-guacamole,
			192.168.0.242 : goto fwd-4-nginx,
		}
		ip daddr & 255.255.0.255 vmap {
			192.168.0.242 : goto fwd-2-nginx,
			192.168.0.244 : goto fwd-2-sftp,
		}
	}

	chain fwd-inst {
		ip saddr & 255.255.255.0 . ip daddr & 255.255.255.0 vmap { \
			# prd
			192.168.1.0 . 192.168.1.0 : return,                \
			# stg
			192.168.2.0 . 192.168.2.0 : return,                \
			# dev
			192.168.3.0 . 192.168.3.0 : return,                \
		}
		ip saddr 192.168.0.0/16 ip daddr 192.168.0.0/16 drop
	}
	chain forward {
		type filter hook forward priority filter; policy accept;

		## Inter/Intra instance forwarding policy
		jump fwd-inst

		# Not exposing internal networks MTU via TCP MSS.
		oifname { "en0", "macvlan0" } tcp flags syn \
			tcp option maxseg size set rt mtu

		## conntrack
		ct state vmap {
			invalid     : drop,
			established : accept,
			related     : accept,
			new         : jump fwd-ct-new,
			untracked   : drop
		}

		## reject
		reject with icmpx type admin-prohibited
	}
}
